ethers.sha256(hash)
ethers.sha(hash)
hash
let b = ethers.utils.toUtf8Bytes(hash)
let y = ethers.const.hash
t. toHexString ( ) 
let h = hash.toHexString ( );
t
let t = ethers.utils.keccak256(hash)
ethers.utils.parseBytes32String(hash)
Uncaught Error: invalid bytes32 - not 32 bytes long
let me = ethers.utils.parseBytes32String(hash)
let one2 = BigNumber.from(hash)
await factory.getDeployTransaction()
factory.getDeployTransaction()
await hash.wait()
hash.byteCode
hash
factory.feeTo.toBigNumber()
factory.address
(await factory.INIT_CODE_PAIR_HASH).toString()
let originalText = ethers.utils.parseBytes32String(hash)
let hello = await  ethers.utils.format(hash);
 ethers.utils.format(hash);
let in =  ethers.utils.format(hash);
let info = ethers.utils.format(hash);
 let info = ethers.utils.format(ownerfee)
ownerfee.toString
ownerfee.address
(ownerfee).toString();
let ownerfee = await factory.feeTo;
await factory.setFeeTo("0x2546BcD3c84621e976D8185a91A922aE77ECEc30");
await factory.allPairs
factory.allPairs
factory.INIT_CODE_PAIR_HASH
factory.feeTo
let result = await hash1.wait();
await hash1.wait();
let hash1 = await factory.INIT_CODE_PAIR_HASH;
mainHash
let mainHash = ethers.utils.formatBytes32String(hash);
let hash = await factory.INIT_CODE_PAIR_HASH;
let factory = await instance.attach(deployedAddress);
let deployedAddress = "0xd0F350b13465B5251bb03E4bbf9Fa1DbC4a378F3"
const instance = await ethers.getContractFactory("AvacadoFactory");
cons instance = await ethers.getContractFactory("AvacadoFactory");